services:
  # 基础应用服务
  app:
    image: online-time:latest
    container_name: online-time-app-perf
    restart: unless-stopped
    ports:
      - "8090:80"
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - app-network

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: online-time-redis-perf
    restart: unless-stopped
    command: redis-server --maxmemory 128mb --maxmemory-policy allkeys-lru
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - app-network

  # HAProxy负载均衡
  haproxy:
    image: haproxy:2.8-alpine
    container_name: online-time-haproxy-perf
    restart: unless-stopped
    ports:
      - "8091:80"
      - "8092:8080"  # 统计页面
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - app
    networks:
      - app-network

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-simple
    restart: unless-stopped
    ports:
      - "9092:9090"
    volumes:
      - ./prometheus-simple.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data: