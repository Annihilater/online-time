# =================================
# 在线时间工具 - HAProxy 负载均衡配置
# =================================

global
    daemon
    maxconn 4096
    user haproxy
    group haproxy
    
    # 日志配置
    log 127.0.0.1:514 local0
    
    # 统计配置
    stats socket /var/run/haproxy.sock mode 660 level admin
    stats timeout 30s

defaults
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    
    # 日志
    option httplog
    option dontlognull
    
    # 健康检查
    option httpchk GET /health
    
    # 错误文件
    errorfile 400 /usr/local/etc/haproxy/errors/400.http
    errorfile 403 /usr/local/etc/haproxy/errors/403.http
    errorfile 408 /usr/local/etc/haproxy/errors/408.http
    errorfile 500 /usr/local/etc/haproxy/errors/500.http
    errorfile 502 /usr/local/etc/haproxy/errors/502.http
    errorfile 503 /usr/local/etc/haproxy/errors/503.http
    errorfile 504 /usr/local/etc/haproxy/errors/504.http

# 统计页面
frontend stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE
    stats auth admin:admin123

# 主前端
frontend web_frontend
    bind *:80
    mode http
    
    # 默认后端
    default_backend app_servers
    
    # 健康检查直接返回
    acl health_check path_beg /health
    http-request return status 200 content-type text/plain string "healthy\n" if health_check
    
    # 请求头处理
    http-request set-header X-Forwarded-Proto http
    http-request add-header X-Forwarded-For %[src]

# 应用服务器后端
backend app_servers
    mode http
    balance leastconn
    
    # 健康检查
    option httpchk GET /health
    http-check expect status 200
    
    # Cookie 会话保持
    cookie SERVERID insert indirect nocache
    
    # 服务器定义
    server app-1 app-1:3000 cookie app-1 check inter 10s rise 2 fall 3 maxconn 1000
    server app-2 app-2:3000 cookie app-2 check inter 10s rise 2 fall 3 maxconn 1000
    server app-3 app-3:3000 cookie app-3 check inter 10s rise 2 fall 3 maxconn 1000
    
    # 响应头
    http-response set-header X-Load-Balancer HAProxy

# 监控后端
listen prometheus
    bind *:9091
    mode http
    server prometheus prometheus:9090 check

listen grafana
    bind *:3002
    mode http
    server grafana grafana:3000 check